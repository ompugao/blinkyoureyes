on: 
  push:
    # branches:
    #   - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: build
    needs: createrelease
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-latest, windows-latest, ubuntu-20.04]
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller -F -w --onefile -n blinkyoureyes blinkyoureyes.py &&
              cd dist/ &&
              zip -r9 blinkyoureyes blinkyoureyes.app/
            OUT_FILE_NAME: blinkyoureyes.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller blinkyoureyes.py --onefile --noconsole
            OUT_FILE_NAME: blinkyoureyes.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
          - os: ubuntu-20.04
            TARGET: ubuntu-20.04
            CMD_BUILD: pyinstaller --onefile blinkyoureyes.py
            OUT_FILE_NAME: blinkyoureyes
            ASSET_MIME: application/x-elf
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install pyinstaller pyqt5
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
